/*
 * Copyright (c) 2022 Pete Johanson
 *
 * TOMS KEYMAP
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define TBLE_ORTHO   1
//#define TBLE_MIT     1
//#define TBLE_DUAL_2U 1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout =
#ifdef TBLE_DUAL_2U
                       &layout_ortho_4x12_2x2u;
#elif defined(TBLE_MIT)
                       &layout_ortho_4x12_1x2u;
#else
                       &layout_ortho_4x12_all1u;
#endif
    };


      ZMK_MACRO(vimCmd,
		wait-ms = <1>;
		tap-ms = <5>;
                bindings = <&kp ESC &kp COLON>;
		)

      ZMK_MACRO(vimLead,
		wait-ms = <1>;
		tap-ms = <5>;
                bindings = <&kp ESC &kp SPACE>;
		)

    
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
    };


    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <

////////////////////////////////////////////////////////////
//
//  ESC    Q   W   F   P   B      J   L   U   Y   :    BSP
//  TAB    A   S   R   T   G      M   N   E   I   O    ENT
//  SHFT   Z   X   C   V   K      K   H   ,   .   UP   /
//  -     ALT CTL GUI BSP GUI   SPCE HYP NAV LFT DOWN  RGHT
//
////////////////////////////////////////////////////////////

 &kp ESC     &kp Q      &kp W      &kp E       &kp R        &kp T        &kp Y        &kp U          &kp I       &kp O      &kp P       &kp BKSP
 &kp TAB     &kp A      &kp S      &kp D       &kp F        &kp G        &kp H        &kp J          &kp K       &kp L      &kp SEMI    &kp RET
 &kp LSHFT   &kp Z      &kp X      &kp C       &kp V        &kp B        &kp N        &kp M          &kp COMMA   &kp DOT    &kp UP      &kp SLASH
 &trans      &kp LALT   &kp LCTRL    &kp LGUI  &mo NUM_L    &kp BKSP     &kp SPACE    &lt NAV_L RET  &kp LG(LC(LA(LSHIFT)))  &kp LEFT     &kp DOWN      &kp RIGHT


// &kp ESC     &kp Q      &kp W      &kp F       &kp P        &kp B        &kp J        &kp L          &kp U       &kp Y      &kp SEMI    &kp BKSP
// &kp TAB     &kp A      &kp S      &kp R       &kp T        &kp G        &kp M        &kp N          &kp E       &kp I      &kp O       &kp RET
// &kp LSHFT   &kp Z      &kp X      &kp C       &kp D        &kp V        &kp K        &kp H          &kp COMMA   &kp DOT    &kp UP      &kp SLASH

            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <

&bt BT_CLR &trans     &trans     &trans      &trans          &mo SYM_L    &trans     &trans      &trans      &trans       &trans     &kp DEL
&trans     &trans     &trans     &trans      &trans          &trans       &trans     &kp LEFT    &kp DOWN    &kp UP       &kp RIGHT  &trans
&trans     &bt BT(0)  &bt BT(1)  &bt BT(2)   &bt BT(3)       &bt BT(4)    &trans     &kp HOME    &kp PG_DN   &kp PG_UP    &kp END    &trans
&trans     &trans     &trans     &trans      &trans          &trans       &trans     &trans      &trans      &kp LS(LC(TAB)) &trans  &kp LC(TAB) 

            >;
        };
///////////////////////////////////////////////////////
// 
//  vimCmd    1   2   3   4   5   6   7   8   9   0    &&
//  vimLead   +   [   {   (   "   '   )   }   ]   -    &&
//  &&        !   @   #   $   %   ^   &   *   =   UP   &&
//
/////////////////////////////////////////////////////// 


        num_layer {
            label = "Num";
            bindings = <
&vimCmd   &kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans  
&vimLead  &kp PLUS   &kp LBKT   &kp LBRC   &kp LPAR   &kp DQT    &kp SQT    &kp RPAR   &kp RBRC   &kp RBKT   &kp MINUS  &trans  
&trans    &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5) &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp EQUAL  &trans     &trans
&trans    &trans     &trans     &trans     &trans     &trans     &trans     &mo SYM_L  &trans     &trans     &trans     &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&trans  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10     &bootloader
&trans  &kp F11 &kp F12    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &studio_unlock
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans

            >;
        };


    };
};

